@use 'sass:math';
@use 'functions' as *; // позволяет применять функцию из соседнего файла


// Ниже будет установлен "резиновый" текст, который будет меняться в зависимости от ширины экрана. Поменять max и min значения шрифта 
//(не в пикселях) и изменить ширину вьюпорта
@mixin fluid-text($max: 48, $min: 16) {
  font-size: fluid($max, $min);
}

// Миксин hide — это пользовательский миксин, который обычно используется в Sass/SCSS для скрытия элементов на странице. 
// Конкретная реализация может отличаться в зависимости от автора, но чаще всего этот миксин применяет стили, 
// которые делают элемент невидимым или удаляют его из потока документа.
@mixin hide {
  opacity: 0;
  visibility: hidden;
}

// Миксин show — это пользовательский миксин, который обычно используется в Sass/SCSS для отображения скрытых элементов. 
// Он противоположен миксину hide и применяет стили, которые делают элемент видимым или возвращают его в поток документа.
@mixin show {
  opacity: 1;
  visibility: visible;
}

// разворачивается в ряд свойств для центрирования элемента
@mixin flex-center($isInline: false) {
  @if $isInline {
    display: inline-flex;
  }

  @else {
    display: flex;
  }

  justify-content: center;
  align-items: center;
}

// центрирование через абсолютное позиционирование
@mixin abs-center {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}

@mixin abs-x {
  position: absolute;
  left: 50%;
  translate: -50%;
}

@mixin abs-y {
  position: absolute;
  top: 50%;
  translate: 0 -50%;
}

// рисует квадрат определенного размера
@mixin square($size) {
  width: $size;
  height: $size;
}

// разворачивает набор свойст для сокрытия элемента
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@mixin full-vw-centered-line(
  $property: top,
  $left: 50%,
  $right: auto,
  $translate: -50%
) {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    left: $left;
    right: $right;
    #{$property}: 0;
    transform: translateX(#{$translate});
    width: 100vw;
    height: rem(1);
    background-color: var(--color-dark-15);
    pointer-events: none;
  }
}